{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Api } from \"../sources/remote/api/Api\";\nexport var AuthRepositoryImpl = function () {\n  function AuthRepositoryImpl() {\n    _classCallCheck(this, AuthRepositoryImpl);\n  }\n  _createClass(AuthRepositoryImpl, [{\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(function* (user) {\n        console.log(user);\n        try {\n          var response = yield Api.post('/users', user);\n          console.log('RESPONSE ', JSON.stringify(response.data));\n          return Promise.resolve({\n            error: undefined,\n            result: response.data\n          });\n        } catch (error) {\n          var e = error.message;\n          console.log('ERROR:', e);\n          return Promise.resolve({\n            error: e,\n            result: undefined\n          });\n        }\n      });\n      function register(_x) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        try {\n          var response = yield Api.post('/users/login', {\n            email: email,\n            password: password\n          });\n          console.log('RESPONSE ', JSON.stringify(response.data));\n          return Promise.resolve(response.data);\n        } catch (error) {\n          var _e$response, _e$response2;\n          var e = error;\n          console.log('ERROR:', JSON.stringify((_e$response = e.response) == null ? void 0 : _e$response.data));\n          var apiError = JSON.parse(JSON.stringify((_e$response2 = e.response) == null ? void 0 : _e$response2.data));\n          return Promise.resolve(apiError);\n        }\n      });\n      function login(_x2, _x3) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }]);\n  return AuthRepositoryImpl;\n}();","map":{"version":3,"names":["Api","AuthRepositoryImpl","_classCallCheck","_createClass","key","value","_register","_asyncToGenerator","user","console","log","response","post","JSON","stringify","data","Promise","resolve","error","undefined","result","e","message","register","_x","apply","arguments","_login","email","password","_e$response","_e$response2","apiError","parse","login","_x2","_x3"],"sources":["C:/Users/DIEGO TERRAZAS/Desktop/ClasesRichi/src/Data/repositories/AuthRepository.tsx"],"sourcesContent":["import { AuthRepository } from \"../../Domain/repositories/AuthRepository\";\nimport { User } from \"../../Domain/entities/User\";\nimport { Api } from \"../sources/remote/api/Api\";\nimport { ResponseApi} from \"../sources/remote/models/ResponseApi\";\nimport { AxiosError } from \"axios\";\n\nexport class AuthRepositoryImpl implements AuthRepository {\n    async register(user: User) {\n        console.log(user);\n        try {\n            const response = await Api.post<ResponseApi>('/users', user);\n            console.log('RESPONSE ', JSON.stringify(response.data));\n            return Promise.resolve({error: undefined, result: response.data});\n        } catch (error) {\n            let e = (error as Error).message;\n            console.log('ERROR:', e);\n            return Promise.resolve({ error: e, result: undefined});\n        }\n    }\n\n    async login(email:string, password: string): Promise<ResponseApi>{\n        try {\n            const response = await Api.post<ResponseApi>('/users/login', {\n                email: email,\n                password: password\n            });\n            console.log('RESPONSE ', JSON.stringify(response.data));\n            return Promise.resolve(response.data);\n        } catch (error) {\n            let e = (error as AxiosError);\n            console.log('ERROR:', JSON.stringify(e.response?.data));\n            const apiError:ResponseApi = JSON.parse(JSON.stringify(e.response?.data)); \n            return Promise.resolve(apiError);\n        }\n    }\n\n}"],"mappings":";;;AAEA,SAASA,GAAG,QAAQ,2BAA2B;AAI/C,WAAaC,kBAAkB;EAAA,SAAAA,mBAAA;IAAAC,eAAA,OAAAD,kBAAA;EAAA;EAAAE,YAAA,CAAAF,kBAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,SAAA,GAAAC,iBAAA,CAC3B,WAAeC,IAAU,EAAE;QACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI;UACA,IAAMG,QAAQ,SAASX,GAAG,CAACY,IAAI,CAAc,QAAQ,EAAEJ,IAAI,CAAC;UAC5DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEG,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACvD,OAAOC,OAAO,CAACC,OAAO,CAAC;YAACC,KAAK,EAAEC,SAAS;YAAEC,MAAM,EAAET,QAAQ,CAACI;UAAI,CAAC,CAAC;QACrE,CAAC,CAAC,OAAOG,KAAK,EAAE;UACZ,IAAIG,CAAC,GAAIH,KAAK,CAAWI,OAAO;UAChCb,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEW,CAAC,CAAC;UACxB,OAAOL,OAAO,CAACC,OAAO,CAAC;YAAEC,KAAK,EAAEG,CAAC;YAAED,MAAM,EAAED;UAAS,CAAC,CAAC;QAC1D;MACJ,CAAC;MAAA,SAAAI,SAAAC,EAAA;QAAA,OAAAlB,SAAA,CAAAmB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAH,QAAA;IAAA;EAAA;IAAAnB,GAAA;IAAAC,KAAA;MAAA,IAAAsB,MAAA,GAAApB,iBAAA,CAED,WAAYqB,KAAY,EAAEC,QAAgB,EAAuB;QAC7D,IAAI;UACA,IAAMlB,QAAQ,SAASX,GAAG,CAACY,IAAI,CAAc,cAAc,EAAE;YACzDgB,KAAK,EAAEA,KAAK;YACZC,QAAQ,EAAEA;UACd,CAAC,CAAC;UACFpB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEG,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACvD,OAAOC,OAAO,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAAC;QACzC,CAAC,CAAC,OAAOG,KAAK,EAAE;UAAA,IAAAY,WAAA,EAAAC,YAAA;UACZ,IAAIV,CAAC,GAAIH,KAAoB;UAC7BT,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,IAAI,CAACC,SAAS,EAAAgB,WAAA,GAACT,CAAC,CAACV,QAAQ,qBAAVmB,WAAA,CAAYf,IAAI,CAAC,CAAC;UACvD,IAAMiB,QAAoB,GAAGnB,IAAI,CAACoB,KAAK,CAACpB,IAAI,CAACC,SAAS,EAAAiB,YAAA,GAACV,CAAC,CAACV,QAAQ,qBAAVoB,YAAA,CAAYhB,IAAI,CAAC,CAAC;UACzE,OAAOC,OAAO,CAACC,OAAO,CAACe,QAAQ,CAAC;QACpC;MACJ,CAAC;MAAA,SAAAE,MAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAT,MAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAQ,KAAA;IAAA;EAAA;EAAA,OAAAjC,kBAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}